extends pugTemplates/basic.pug
block head
    title Presskit â€” Ct.js
    meta(name="description" content="Official logos and illustrations ready for download, style guides, and a list of features.")
block body
    section.blue.gradient
        .inner.center
            h1 Presskit
    section
        .inner
            .c8.breakon960
                h2.nmt Short information
                p
                    b General info
                    br
                    .
                        Ct.js is a 2D game-making engine with high-quality documentation,
                        visual tools for asset management, and a smart code editor,
                        all integrated into one IDE. It has a smooth workflow
                        and excellent user experience.
                        The engine can be used at programming courses and is good for beginners
                        in game development. Ct.js also fits more seasoned developers
                        as one can make and publish a game for web and desktop entirely in ct.js.
                p
                    b Distribution
                    br
                    .
                        Ct.js is free, open-source software released under the MIT license.
                        Its prebuilt bundles are available on its website, Github, and itch.io.
                p
                    b Lifecycle
                    br
                    .
                        Ct.js is a project with a long history (since approximately 2013),
                        but it has been publicly available on itch.io since summer 2018.
                        It is actively maintained, bringing bug fixes, improvements,
                        and new features.
                p
                    b Similarities with other products
                    br
                    .
                        Ct.js is inspired by YoYo Game Maker and Tululoo Game Maker and
                        has a similar API and workflow. Under the hood, ct.js uses pixi.js
                        graphics engine, which defines an object-oriented drawing process.
                p
                    b Community
                    br
                    .
                        The ct.js community is active in the official ct.js Discord server. People
                        can help each other, share their projects, make suggestions for ct.js
                        development, directly talk with developers, and listen to synthwave there.
            .c4.breakon960
                h2.nmt Meta
                dl
                    dd: b Full name
                    dt ct.js
                    dd: b Author
                    dt Cosmo Myzrail Gorynych (also known as CoMiGo Games) and contributors
                    dd: b Released
                    dt July 31, 2018
                    dd: b License
                    dt MIT
                    dd: b Price
                    dt Free (Pay what you want $0+)

                h2 Links
                ul
                    li: a(href="https://discord.gg/yuvuDW5" target="_blank") Discord server
                    li: a(href="https://docs.ctjs.rocks/" target="_blank") Docs and tutorials
                    li: a(href="https://github.com/ct-js/ct-js/releases" target="_blank") Github releases
                    li: a(href="https://github.com/ct-js/ct-js" target="_blank") Github repository
                    li: a(href="https://ctjs.itch.io/ct/" target="_blank") itch.io store page
                    li: a(href="/" target="_blank") Website
                    li: a(href="/download" target="_blank") Website (downloads)
            .clear
    section.grey
        .inner
            h2.nmt Assets
            .AssetCards.breakon960
                .anAssetCard
                    .center
                        img(src="/img/presskit/FullColor.svg")
                    h3 The standard logo's variant
                    span Download in format:
                    .aButtonGroup
                        a.button(download href="/img/presskit/FullColor.png") PNG
                        a.button(download href="/img/presskit/FullColor.svg") SVG
                .anAssetCard
                    .center
                        img(src="/img/presskit/WhiteOnBlack.svg" style="background-color: #b9bbbe;")
                    h3 White logo for darker backgrounds
                    span Download in format:
                    .aButtonGroup
                        a.button(download href="/img/presskit/WhiteOnBlack.png") PNG
                        a.button(download href="/img/presskit/WhiteOnBlack.svg") SVG
                .clear
                .anAssetCard
                    .center
                        img(src="/img/presskit/BlackOnWhite.svg")
                    h3 Black logo for prints
                    span Download in format:
                    .aButtonGroup
                        a.button(download href="/img/presskit/BlackOnWhite.png") PNG
                        a.button(download href="/img/presskit/BlackOnWhite.svg") SVG
                .anAssetCard
                    .center
                        img(src="/img/presskit/CircledIcon.png")
                    h3 The app icon
                    span Download in format:
                    .aButtonGroup
                        a.button(download href="/img/presskit/CircledIcon.png") PNG
                        a.button(download href="/img/presskit/CircledIcon.svg") SVG
            .center
                a.button(href="/img/presskit/Ct.js assets.zip" download)
                    svg.feather
                        use(xlink:href="/icons.svg#download")
                    span Download all logos and screenshots
    section.blue
        .inner
            h2.nmt Colors
            .ColorCards.breakon960
                .aColorCard
                    .aColor(style="background-color: #446adb")
                    h3 #446ADB
                    p Sky blue, the action.
                .aColorCard
                    .aColor(style="background-color: #5144db")
                    h3 #5144DB
                    p Purple, the ink and blood.
                .aColorCard
                    .aColor(style="background-color: #fff")
                    h3 #FFFFFF
                    p White, the invisible.
            p.
                We don't provide CMYK colors as ct.js is a digital app,
                but if you need something for print, printing houses usually know
                how to handle RGB colors. If they don't, choose a better printing house.
    section#features
        .inner
            h2.nmt Feature list (WIP)
            .c4.breakon960
                h3 Animation
                ul
                    li Support for framed animations from sprite sheets.
                    li Ability to turn one sprite sheet into several animations with ct.sprite module.
                    li Scrolling backgrounds and tiled textures.
                    li Smooth value animations with ct.tween.
                h3 Branding
                ul
                    li Configurable loading screen.
                    li Configurable icon for web and desktop builds.
                    li Optional white-labelling in project's settings.
                h3 Camera & Viewport
                ul
                    li Automatic support for multiple resolutions.
                    li Autolayouts to adapt UI elements for different screen aspect ratios.
                    li Screen shake effects.
                    li Smooth movement from point to point.
                    li Viewport rotation.
                    li Zooming.
                h3 Coding
                ul
                    li Editable behaviors for reusable composed gameplay logic.
                    li Code in CoffeeScript or JavaScript+TypeScript.
                    li Code folding.
                    li Code highlighting.
                    li Dozens of built-in and modded events.
                    li Multi-cursor editing.
                    li Real-time type checks with errors, warnings, and hints.
                    li String and RegExp search.
                    li Suggestions with embedded documentation.
                    li Support for ligatures. (Can be toggled in settings.)
                h3 Custom fonts
                ul
                    li Import TTF fonts and use them in canvas-based text labels.
                    li Produce bitmap fonts from TTF fonts.
                    li Set a range of characters to include in bitmap fonts by choosing charsets or manually typing the needed symbols.
                h3 Debugging
                ul
                    li Integrated Chrome debugger with all its tools.
                    li Jump to any level in your game at click.
                    li Pause and resume your game.
                    li Restart the current level, or the whole game.
                    li Take a screenshot of your game while in debug mode.
                h3 Documentation
                ul
                    li Documentation provided with modules integrates into IDE interface.
                    li Offline docs and examples bundled with ct.js.
            .c4.breakon960
                h3 Exporting
                ul
                    li Add custom HTML and CSS to your builds with ct.akatemplate.
                    li Export for web in one click.
                    li Export for Windows, Mac, and Linux with Neutralino.js framework.
                    li Export for Android with Capacitor framework.
                    li Support for older browsers that don't support WebGL.
                h3 Inputs
                ul
                    li Full layout-agnostic keyboard support.
                    li Modern JS Pointer API support, PointerLock support.
                    li Mouse support.
                    li Gamepad support.
                    li Touch screen support.
                    li Virtual keys and joysticks.
                h3 Interface
                ul
                    li Asset tree with customizable icons and colors for folders.
                    li Configurable font for code.
                    li Configurable panels for asset lists.
                    li Numerous dark and light themes.
                    li Search and sort assets.
                h3 Translations
                ul
                    li Ability to add new language files and modify them.
                    li.
                        Brazilian Portuguese, Chinese Simplified, Dutch, English,
                        French, German, Polish, Romanian, Russian, Ukrainian, Spanish UI translations
                        authored by ct.js community.
                h3 Modding ct.js
                ul
                    li Add new fields to objects and rooms.
                    li Custom settings pages.
                    li Dozens of open-source modules come bundled with ct.js.
                    li Integrate module's documentation into ct.js with markdown files and TypeScript definition files.
                    li Localize modules' fields that are displayed in ct.js' UI.
                h3 Motion & collisions
                ul
                    li Ability to code a movement system for platformers. (Examples and tutorials are included.)
                    li Arcade movement system.
                    li Circled, rectangular, polygon collision shapes with support for transforms.
                    li Collision checks with other objects and tile sets.
                    li Collision groups for objects and tiles to check collisions against a specified subset of entities.
                    li Continuous movement.
                    li Environment querying system.
                    li Physics engine based on Matter.js.
                h3 Networking
                ul
                    li Integration module for Nakama, online multiplayer platform. Supports self-hosted servers.
                    li Custom JavaScript support means that every modern web API is supported, including Fetch API, WebRTC, WebSockets, and thousands of third-party libraries.
            .c4.breakon960
                h3 Object transformations
                ul
                    li Movement.
                    li Rotation.
                    li Scaling.
                    li Tint.
                    li Transforming with a 3x3 transform matrix.
                h3 Room editor
                ul
                    li Adding custom properties to individual objects.
                    li Animation simulation.
                    li Boundless levels â€” you can expand your level anytime at any direction without extra steps.
                    li Camera locking.
                    li Copy/paste multiple objects.
                    li Scriptable events for the whole room.
                    li Multiple selection & group transformation.
                    li Pan and zoom a level.
                    li Placing objects individually, in lines, and as a brush.
                    li Undo/redo commands.
                    li Sorting and reordering sprites.
                    li Tilemap support.
                h3 Savegames
                ul
                    li Automatic handling of paths and conversions for desktop builds at ct.fs module.
                    li Create, read, write and delete files with ct.js module for desktop builds.
                    li Save strings into browser with localStorage; available for web and desktop builds.
                h3 Sounds
                ul
                    li 3D audio.
                    li Built-in gallery of free game assets.
                    li Support for mp3, wav, ogg formats.
                    li Stereo panning.
                    li Fade in/fade out transitions.
                    li Preloading music files on demand.
                    li Randomized filters and picking sounds from a pool of variants.
                    li Sound recoder.
                h3 Special effects
                ul
                    li Lighting system.
                    li Particle systems with real-time modelling.
                    li Shaders and built-in filters.
                    li Transitions between levels.
                h3 Textures
                ul
                    li Bitmap fonts.
                    li Support for most popular image formats.
                    li Support for 9-slice planes.
                    li Textures get packaged into PNG atlases for faster load and better performance.
                    li "Magic numbers" for streamlined import of sprite sheets.
                    li Built-in gallery of free game assets.
                h3 UI
                ul
                    li Design UI in separate rooms and add them to viewport in gameplay levels.
                    li Dynamic text labels, buttons, and textboxes with live preview in a room editor.
                    li Set alignment rules to make sure the UI works with different screen aspect ratios.
                    li Tools to bind certain objects in a room to JS expressions.
                    li Virtual keys. (Aka on-screen keys and joysticks.)
            .clear
    section.grey
        .inner
            h2.nmt Assets
            .AssetCards.breakon960
                +aScreenshot("Code editor 1", "CodeEditor_01")
                +aScreenshot("Code editor 2", "CodeEditor_02")
                .clear
                +aScreenshot("Room editor 1", "RoomEditor_01")
                +aScreenshot("Room editor 2", "RoomEditor_02")
                .clear
                +aScreenshot("Particle systems 1", "ParticleSystems_01")
                +aScreenshot("Particle systems 2", "ParticleSystems_02")
                .clear
                +aScreenshot("Texture editor 1", "TextureEditor_01")
                +aScreenshot("Texture editor 2", "TextureEditor_02")
                .clear
                +aScreenshot("Asset panel", "AssetViewer")
                +aScreenshot("Font viewer", "FontViewer")
    section.blue
        .inner.center
            a.button(href="/img/presskit/Ct.js assets.zip" download)
                svg.feather
                    use(xlink:href="/icons.svg#download")
                span Download all logos and screenshots


mixin aScreenshot(title, baseName)
    .anAssetCard.aScreenshot
        .center
            img(src=`/img/presskit/${baseName}_thumbnail.jpg`)
        a.button.toright(download href=`/img/presskit/${baseName}.png`)
            svg.feather
                use(xlink:href="/icons.svg#download")
            span Download
        h3=title