extends pugTemplates/basic.pug
block head
    title=i18n.homepage[site.locale].pageTitle
    meta(name="description" content=i18n.homepage[site.locale].pageDescription)
    link(rel="preconnect" href="https://fonts.googleapis.com")
    link(rel="preconnect" href="https://fonts.gstatic.com" crossorigin)
    link(href="https://fonts.googleapis.com/css2?family=Jacquard+12&display=swap" rel="stylesheet")
block body
    - var nDownload = site.links && site.links.download || '/download'
    section.intro#intro.blue.gradient
        .wideinner.flexrow.relative
            .c4.breakon1400#thePunchText
                h1.nmt
                    em=i18n.homepage[site.locale].meetCtjs
                    span=i18n.homepage[site.locale].yourNewEditor
                p.big.nmt=i18n.homepage[site.locale].punchline
                p.big=i18n.homepage[site.locale].lovedBy
                include /homepageDownload.pug
            img(src="/img/Planet.svg")#theLittlePlanet
            img(src="/img/Planet.svg")#theBiggerPlanet
            img(src="/img/Rocket.svg" style="animation-delay: -3s;")#theRocket.floating
            .c8.breakon1400#theIllustration
                img(src="/img/HomepageScreenshot.png")#theHomepageScreenshot
            img(src="/img/HammerCat.svg" style="animation-delay: -1.2s;")#theHammerCat.floating
            img(src="/img/GamepadCat.svg")#theGamepadCat.floating
            .clear
        #features
            - var featuresGrid = i18n.homepage[site.locale].featuresGrid
            .aFeaturesGrid
                .aFeature.widecard.main.cell8
                    h2.aMainLabel=featuresGrid.ctjsBringsExceptionalTools
                    span.aSecondaryLabel ðŸ˜™ðŸ‘Œâœ¨ðŸ’…ðŸ’ª

                .aFeature.squarecard.btl.cell1.animatepackage
                    h3.aMainLabel=featuresGrid.oneClickExports
                    span.aSecondaryLabel=featuresGrid.forWebDesktop
                    svg.feather
                        use(xlink:href="/icons.svg#package")
                    svg.feather
                        use(xlink:href="/icons.svg#unpackage")
                .aFeature.widecard.cell2
                    h3.aMainLabel=featuresGrid.toolsForResponsiveUI
                    span.aSecondaryLabel=featuresGrid.adaptInterfaceToAnyScreen
                    .aFeature-aHeartsCounter
                        svg.feather
                            use(xlink:href="/icons.svg#heart")
                        svg.feather
                            use(xlink:href="/icons.svg#heart")
                        svg.feather
                            use(xlink:href="/icons.svg#heart")
                    .aFeature-Settings
                        svg.feather
                            use(xlink:href="/icons.svg#settings")
                    .aFeature-aToolbar
                        .aFeature-aHealthbar
                            .aFeature-aHealthbarInner
                .aFeature.bigcard.cell3
                    video.aFeature-aPreview(src="/img/indexFeaturesGifs/codeEditors.mp4" autoplay loop muted)
                    h3.aMainLabel=featuresGrid.codeEditorWithErrorChecks
                    span.aSecondaryLabel=featuresGrid.vsCodeLikeCodeEditor
                .aFeature.squarecard.btr.cell4
                    h3.aMainLabel=featuresGrid.dynamicSoundSystem
                    span.aSecondaryLabel=featuresGrid.randomizeVolumePitch
                    svg(xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24").feather.animatevolume
                        polygon(points="11 5 6 9 2 9 2 15 6 15 11 19 11 5")
                        path(d="M15.54 8.46a5 5 0 0 1 0 7.07")
                        path(d="M19.07 4.93a10 10 0 0 1 0 14.14")
                .aFeature.bigcard.cell5
                    video.aFeature-aPreview(src="/img/indexFeaturesGifs/levelEditor.mp4" autoplay loop muted)
                    h3.aMainLabel=featuresGrid.satisfyingToUseLevelEditor
                    span.aSecondaryLabel=featuresGrid.tileEditorBrushLikeObjectPlacement
                .aFeature.smallcard.cell6
                    h3.aMainLabel=featuresGrid.pixelartRender
                    span.aSecondaryLabel=featuresGrid.enabledOneClick
                    img.knights(src="/img/indexFeaturesGifs/knights.gif")
                .aFeature.smallcard.cell7
                    h3.aMainLabel.jacquard=featuresGrid.bitmapFonts
                    span.aSecondaryLabel=featuresGrid.crispPerformantFonts
                    svg.feather
                        use(xlink:href="/icons.svg#bitmap-font")
                .aFeature.bigcard.cell9
                    video.aFeature-aPreview(src="/img/indexFeaturesGifs/particleSystems.mp4" autoplay loop muted)
                    h3.aMainLabel=featuresGrid.visualParticleSystemEditor
                    span.aSecondaryLabel=featuresGrid.layerEmittersComplexEffects
                .aFeature.smallcard.cell10
                    h3.aMainLabel=featuresGrid.whiteLabelling
                    span.aSecondaryLabel=featuresGrid.brandYourAppHideCtjsLogo
                    svg.feather
                        use(xlink:href="/icons.svg#droplet")
                .aFeature.bigcard.cell11
                    video.aFeature-aPreview(src="/img/indexFeaturesGifs/behaviors.mp4" autoplay loop muted)
                    h3.aMainLabel=featuresGrid.behaviorsAndContentSystem
                    span.aSecondaryLabel=featuresGrid.composeGameplayLogic
                .aFeature.squarecard.cell12
                    h3.aMainLabel=featuresGrid.bundledInEditorDocs
                    span.aSecondaryLabel=featuresGrid.alwaysAvailableSidebar
                    svg.feather
                        use(xlink:href="/icons.svg#book-open")
                .aFeature.squarecard.bbl.cell13
                    h3.aMainLabel=featuresGrid.uiElements
                    span.aSecondaryLabel=featuresGrid.crossPlatformButtonsPanels
                    svg.feather
                        use(xlink:href="/icons.svg#ui")
                .aFeature.smallcard.cell14
                    h3.aMainLabel=featuresGrid.richDebugger
                    span.aSecondaryLabel=featuresGrid.pauseNavigateAround
                    svg.feather
                        use(xlink:href="/icons.svg#bug")
                .aFeature.squarecard.bbr.cell15
                    h3.aMainLabel=featuresGrid.extendableModdable
                    span.aSecondaryLabel=featuresGrid.addCustomJavaScript
                    svg.feather
                        use(xlink:href="/icons.svg#module")
                .aFeature.wiiidecard.cell16
                    h3.aMainLabel=featuresGrid.flexibleInputActionsSystem
                    span.aSecondaryLabel=featuresGrid.oneLineCode
                    svg.feather
                        use(xlink:href="/icons.svg#gamepad")
            .center
                include /homepageDownload.pug
    section#languages.npt
        .wideinner
            .center
                h2.nmt=i18n.homepage[site.locale].languages
        .aLanguageList
            .aLanguage
                .aLanguageInner
                    .center
                        h3
                            svg.icon
                                use(xlink:href="/icons.svg#javascript")
                            svg.icon
                                use(xlink:href="/icons.svg#typescript")
                            span JavaScript & TypeScript
                        .hSub=i18n.homepage[site.locale].jsDesc
                    code
                        pre
                            :highlight(lang="javascript")
                                // Event for a collision with a bullet
                                var damage = 5;
                                // 15% crit chance!
                                if (random.chance(15, 100)) {
                                    damage *= 2;
                                }
                                this.hp -= damage;

                                // Destroy the projectile
                                other.kill = true;

                                if (this.hp <= 0) {
                                    this.kill = true;
                                }
            .aLanguage
                .aLanguageInner
                    .center
                        h3
                            svg.icon
                                use(xlink:href="/icons.svg#coffeescript")
                            span CoffeeScript
                        .hSub=i18n.homepage[site.locale].coffeeDesc
                    code
                        pre
                            :highlight(lang="coffeescript")
                                # Event for collision with a bullet
                                damage = 5

                                # 15% crit chance!
                                if random.chance 15, 100
                                    damage *= 2

                                @hp -= damage

                                # Destroy the projectile
                                other.kill = true

                                if @hp <= 0
                                    @kill = true
            .aLanguage
                .aLanguageInner
                    .center
                        h3
                            svg.feather
                                use(xlink:href="/icons.svg#catnip")
                            span Catnip
                        .hSub=i18n.homepage[site.locale].catnipDesc
                    catnip-block.command
                        svg.feather
                            use(xlink:href="/icons.svg#code-alt")
                        span.catnip-block-aTextLabel Set
                        catnip-block.computed.wildcard.wildcard.userdefined
                            svg.feather
                                use(xlink:href="/icons.svg#clock")
                            |
                            span.catnip-block-aTextLabel damage
                        span.catnip-block-aTextLabel value
                        |
                        input.catnip-block-aConstantInput.wildcard(type="text", style="width: 1.5ch;", value="5", readonly)
                    catnip-block.command
                        svg.feather
                            use(xlink:href="/icons.svg#help-circle")
                        span.catnip-block-aTextLabel If
                        catnip-block.computed.boolean.boolean
                            svg.feather
                                use(xlink:href="/icons.svg#sort-numerically")
                            span.catnip-block-aTextLabel random chance
                            |
                            input.catnip-block-aConstantInput.number(type="text", style="width: 2.5ch;", value="15", readonly)
                            |
                            input.catnip-block-aConstantInput.number(type="text", style="width: 3.5ch;", value="100", readonly)
                        .catnip-block-Blocks
                            catnip-block-list
                                catnip-block.command
                                    svg.feather
                                        use(xlink:href="/icons.svg#code-alt")
                                    span.catnip-block-aTextLabel Set
                                    catnip-block.computed.wildcard.wildcard.userdefined
                                        svg.feather
                                            use(xlink:href="/icons.svg#clock")
                                        |
                                        span.catnip-block-aTextLabel damage
                                    span.catnip-block-aTextLabel value
                                    catnip-block.computed.number.wildcard
                                        catnip-block.computed.wildcard.number.userdefined
                                            svg.feather
                                                use(xlink:href="/icons.svg#clock")
                                            |
                                            span.catnip-block-aTextLabel damage
                                        span.catnip-block-aTextLabel Ã—
                                        |
                                        input.catnip-block-aConstantInput.number(type="text", style="width: 1.5ch;", value="2", readonly)
                    catnip-block.command
                        svg.feather
                            use(xlink:href="/icons.svg#minus-circle")
                        span.catnip-block-aTextLabel Decrease
                        catnip-block.computed.wildcard.wildcard.userdefined
                            svg.feather
                                use(xlink:href="/icons.svg#archive")
                            |
                            span.catnip-block-aTextLabel hp
                        span.catnip-block-aTextLabel by
                        catnip-block.computed.wildcard.number.userdefined
                            svg.feather
                                use(xlink:href="/icons.svg#clock")
                            |
                            span.catnip-block-aTextLabel damage
                    catnip-block.command.note
                        svg.feather
                            use(xlink:href="/icons.svg#message-circle")
                        |  Destroy the projectile
                    catnip-block.command.void
                        svg.feather
                            use(xlink:href="/icons.svg#template")
                        span.catnip-block-aTextLabel With copy
                        catnip-block.computed.wildcard.wildcard.userdefined
                            svg.feather
                                use(xlink:href="/icons.svg#bell")
                            |
                            span.catnip-block-aTextLabel other
                        .catnip-block-Blocks
                            catnip-block-list
                                catnip-block.command
                                    svg.feather
                                        use(xlink:href="/icons.svg#template")
                                    span.catnip-block-aTextLabel Destroy this copy
                    catnip-block.command
                        svg.feather
                            use(xlink:href="/icons.svg#help-circle")
                        span.catnip-block-aTextLabel If
                        catnip-block.computed.boolean.boolean
                            catnip-block.computed.wildcard.number.userdefined
                                svg.feather
                                    use(xlink:href="/icons.svg#archive")
                                |
                                span.catnip-block-aTextLabel hp
                            span.catnip-block-aTextLabel â‰¤
                            |
                            input.catnip-block-aConstantInput.number(type="text", style="width: 1.5ch;", value="0", readonly)
                        .catnip-block-Blocks
                            catnip-block-list
                                catnip-block.command
                                    svg.feather
                                        use(xlink:href="/icons.svg#template")
                                    span.catnip-block-aTextLabel Destroy this copy
    section.blue.gradient.waves#games
        .wideinner
            .center
                h2.nmt=i18n.homepage[site.locale].gamesOfAnyGenre
                .hSub=i18n.homepage[site.locale].gamesOfAnyGenreSub
            .aGameList
                each game in home.games.slice(0, 6)
                    +aGame(game.title, game.cover, game.link)
                        p=game.description
            // .center
                - var nMadeWithCt = site.links && site.links.madeWithCtjs || '/madeWithCtjs'
                a.button.big(href=nMadeWithCt)
                    svg.feather
                        use(xlink:href=`/icons.svg#gamepad`)
                    span=i18n.homepage[site.locale].madeWithCtjs
            .center
                a.button.big(href="/submitgame/")
                    svg.feather
                        use(xlink:href=`/icons.svg#send`)
                    span=i18n.homepage[site.locale].submitYourGame
    include /partnersSection.pug
    section#patrons.center.blue.gradient.waves
        include /patrons.pug
        p
            a.button(href="https://boosty.to/comigo" target="_blank")
                svg.icon
                    use(xlink:href=`/icons.svg#boosty`)
                span=i18n.patrons[site.locale].becomePatron
            a.button.itchbuy(href="https://ctjs.itch.io/ct/purchase" target="_blank")
                svg.icon
                    use(xlink:href=`/icons.svg#heart`)
                span=i18n.whatsnext[site.locale].donate
        include /itchbuy.pug
    section#devlog.npt(dir="ltr" lang="en")
        .inner.limited
            h2=i18n.homepage[site.locale].devlog.latest
            each item in devlog.posts
                .aDevlogPost
                    h3.nmb
                        a(href=item.link[0])=item.title
                    p.nmt.meta=`${item.pubDate}`
                    .aPostImage!=item.image
                    a.button.nml(href=item.link[0])
                        svg.feather
                            use(xlink:href="/icons.svg#arrow-right")
                        span=i18n.homepage[site.locale].devlog.readMore
            p(dir=(site.locale === 'ar' ? 'rtl' : 'ltr') lang=site.locale)
                a(href="https://comigo.itch.io/ct/devlog")=i18n.homepage[site.locale].devlog.morePosts
    include /joinGamedev.pug
    section.white#share
        include /shareBlock.pug
    script(src="https://identity.netlify.com/v1/netlify-identity-widget.js")
    script.
        if (window.netlifyIdentity) {
            window.netlifyIdentity.on("init", (user) => {
            if (!user) {
                window.netlifyIdentity.on("login", () => {
                document.location.href = "/admin/";
                });
            }
            });
        }

mixin aGame(title, image, link)
    .aGame
        .aGameMedia
            img(src=image)
            .aGameButton
                a.button(href=link target="_blank")
                    svg.feather
                        use(xlink:href="/icons.svg#play")
                    span=i18n.homepage[site.locale].play
        h4.nmt= title
        if block
            block